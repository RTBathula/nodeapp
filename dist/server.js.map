{"version":3,"sources":["../app/server.js"],"names":["util","global","configKeys","getConfigKeys","app","use","urlencoded","extended","json","static","__dirname","req","res","next","text","_isJSON","body","JSON","parse","header","_connectMongoDB","_routes","get","status","send","getPort","set","server","listen","console","log","then","mongoCon","error"],"mappings":";;AAAA;;;;AACA;;;;AACA;;IAAYA,I;;AACZ;;AAGA;;;;;;;;AAEAC,OAAOC,UAAP,GAAoBF,KAAKG,aAAL,EAApB;;AAHA;;AAIA,IAAIC,MAAM,wBAAV;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAH,IAAIC,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;AACAJ,IAAIC,GAAJ,CAAQ,kBAAQI,MAAR,CAAeC,SAAf,CAAR;;AAEAN,IAAIC,GAAJ,CAAQ,UAASM,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC;AACA,MAAGF,IAAIG,IAAJ,IAAYC,QAAQJ,IAAIG,IAAZ,CAAf,EAAiC;AAC7BH,QAAIK,IAAJ,GAAWC,KAAKC,KAAL,CAAWP,IAAIG,IAAf,CAAX;AACD;;AAED,MAAGH,IAAIK,IAAJ,IAAY,OAAOL,IAAIK,IAAX,KAAmB,QAA/B,IAA2CD,QAAQJ,IAAIK,IAAZ,CAA9C,EAAgE;AAC9DL,QAAIK,IAAJ,GAAWC,KAAKC,KAAL,CAAWP,IAAIK,IAAf,CAAX;AACD;;AAEAJ,MAAIO,MAAJ,CAAW,kCAAX,EAA+C,IAA/C;AACAP,MAAIO,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAP,MAAIO,MAAJ,CAAW,8BAAX,EAA2C,wCAA3C;AACAP,MAAIO,MAAJ,CAAW,8BAAX,EAA2C,gEAA3C;AACAN;AACH,CAfD;;AAiBA;AACAO;;AAEA;AACAC;;AAEAjB,IAAIkB,GAAJ,CAAQ,GAAR,EAAa,UAASX,GAAT,EAAaC,GAAb,EAAiBC,IAAjB,EAAuB;AAChC,SAAOD,IAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAAgCxB,KAAKyB,OAAL,EAArD,CAAP;AACH,CAFD;;AAIArB,IAAIsB,GAAJ,CAAQ,MAAR,EAAgB1B,KAAKyB,OAAL,EAAhB;AACA,IAAIE,SAASvB,IAAIwB,MAAJ,CAAWxB,IAAIkB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAW;AACnDO,UAAQC,GAAR,CAAY,kCAAgC1B,IAAIkB,GAAJ,CAAQ,MAAR,CAA5C;AACA,CAFY,CAAb;;AAIA;AACA,SAASF,eAAT,GAA0B;;AAEzB,wBAAUW,IAAV,CAAe,UAASC,QAAT,EAAkB;AAChC/B,WAAO+B,QAAP,GAAgBA,QAAhB;AACA,GAFD,EAEE,UAASC,KAAT,EAAe;AAChB,UAAMA,KAAN;AACA,GAJD;AAKA;;AAED,SAASZ,OAAT,GAAkB;AACjBjB,MAAIC,GAAJ,CAAQ,GAAR,EAAa,wBAAb;AACA","file":"server.js","sourcesContent":["import express      from 'express'\r\nimport bodyParser   from 'body-parser'\r\nimport * as util    from './helpers/util'\r\nimport {connect}    from './databases/mongo'\r\n\r\n//Routes\r\nimport companyRoute   from './routes/company'\r\n\r\nglobal.configKeys = util.getConfigKeys()\r\nvar app = express()\r\n\r\napp.use(bodyParser.urlencoded({extended: true}))\r\napp.use(bodyParser.json())\r\napp.use(express.static(__dirname))\r\n\r\napp.use(function(req, res, next) {\r\n\t//if req body is a string, convert it to JSON.\r\n\tif(req.text && _isJSON(req.text)){\r\n    \treq.body = JSON.parse(req.text)\r\n  \t}\r\n\r\n  \tif(req.body && typeof(req.body)===\"string\" && _isJSON(req.body)){\r\n    \treq.body = JSON.parse(req.body)\r\n  \t}\r\n\r\n    res.header('Access-Control-Allow-Credentials', true)\r\n    res.header('Access-Control-Allow-Origin', \"*\")\r\n    res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE')\r\n    res.header('Access-Control-Allow-Headers', 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept')\r\n    next()\r\n})\r\n\r\n//Connect mongoDB\r\n_connectMongoDB()\r\n\r\n//Routes\r\n_routes()\r\n\r\napp.get('/', function(req,res,next) { \r\n    return res.status(200).send(\"Clearhaus App runing on PORT:\"+util.getPort())     \r\n})  \r\n\r\napp.set('port', util.getPort())\r\nvar server = app.listen(app.get('port'), function() {\r\n\tconsole.log(\"Clearhaus App runing on PORT:\"+app.get('port'))\r\n})\r\n\r\n//Private Fuctions\r\nfunction _connectMongoDB(){\r\n\r\n\tconnect().then(function(mongoCon){\t\t\r\n\t\tglobal.mongoCon=mongoCon\r\n\t},function(error){\r\n\t\tthrow error \r\n\t})\r\n}\r\n\r\nfunction _routes(){\r\n\tapp.use('/', companyRoute())\t\r\n}\r\n"]}